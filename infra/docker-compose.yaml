version: '3.8'
services:
  postgres:
    image: postgres:17
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      PGUSER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - nestjs-base-structure-example-app-prod-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 30s

  run-migrations:
    build:
      context: ../
      dockerfile: ./infra/run-migrations/Dockerfile
    environment:
      DATABASE_URL: ${DATABASE_URL}
    networks:
      - nestjs-base-structure-example-app-prod-network
    depends_on:
      postgres:
        condition: service_healthy
        required: true

  backend:
    build:
      context: ../
      dockerfile: ./infra/Dockerfile
    restart: always
    ports:
      - ${APP_PORT}:${APP_PORT}
    environment:
      PORT: ${APP_PORT}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
    networks:
      - nestjs-base-structure-example-app-prod-network
    depends_on:
      run-migrations:
        condition: service_completed_successfully
        required: true
      postgres:
        condition: service_healthy
        required: true

networks:
  nestjs-base-structure-example-app-prod-network:
